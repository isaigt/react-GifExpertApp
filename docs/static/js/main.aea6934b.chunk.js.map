{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categorias","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","gif","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGif","imagen","GifExpertApp","props","category","ReactDOM","render","document","getElementById"],"mappings":"yMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAe9C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAES,GAAF,OAAoBP,GAApB,mBAAmCO,OAClDN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAjBQ,SAAEP,GAClBF,EAAeE,EAAEQ,OAAOF,a,+BCPnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAWH,GAD/C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACjC,OACI,sBAAKc,UAAU,2CAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCFJO,EAAU,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UAAgB,ECDf,SAAEA,GAAgB,IAAD,EACdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAiBxC,OAXAC,qBAAU,WACNxB,EAASC,GAAYwB,MAAM,SAAAC,GACvBC,YAAW,WACPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEd,WAER,CAAEpB,IAEEqB,EDf0BM,CAAa3B,GAAjCa,EADyB,EAC9BN,KAAaa,EADiB,EACjBA,QAErB,OACI,qCACI,oBAAIJ,UAAU,6CAAd,SAA6DhB,IAC3DoB,GAAW,oBAAIJ,UAAU,8CAAd,yBACb,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAK,SAAAmB,GAAM,OACd,cAAC,EAAD,eAAmCA,GAAhBA,EAAOjB,aEcvCkB,EAvBM,SAAAC,GAAU,IAAD,EACU5C,mBAAS,CAAC,oBADpB,mBACnBQ,EADmB,KACPT,EADO,KAG1B,OACI,qCACI,oBAAI+B,UAAU,8CAAd,0BACA,cAAC,EAAD,CAAa/B,cAAgBA,IAC7B,uBACA,6BAEQS,EAAWe,KAAK,SAAAsB,GAAQ,OACpB,cAAC,EAAD,CAA0B/B,UAAY+B,GAAvBA,Y,MCXvCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.aea6934b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategorias }) => {\n    const [inputValue, setInputValue] = useState('');\n\n    const handleValue = ( e ) => {\n        setInputValue( e.target.value );\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if( inputValue.trim().length > 2 ){\n            setCategorias( ( categorias ) => [ inputValue, ...categorias ] );\n            setInputValue('');\n        }\n    }\n    \n    return (\n        <form onSubmit={ handleSubmit }>\n            <input\n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleValue }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategorias: PropTypes.func.isRequired\n}","export const getGifs = async( categoria ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( categoria ) }&limit=10&api_key=FguaO7QFx7B6pJmqCFeZAru6JUZqlYhc`;\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n    \n    const gifs = data.map( gif => {\n        return {\n            id: gif.id,\n            title: gif.title,\n            url: gif.images.downsized_medium.url\n        }\n    });\n    return gifs;\n}","import React from 'react';\n\nexport const GifGridItem = ({ title, url }) => {\n    return (\n        <div className=\"card animate__animated animate__fadeInUp\">\n            <img src={ url } alt={ title } />\n            <p>{ title }</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGif } from '../hooks/useFetchGif';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ categoria }) => {\n    const { data:images, loading } = useFetchGif( categoria );\n\n    return (\n        <>\n            <h3 className=\"card animate__animated animate__fadeInDown\">{ categoria }</h3>\n            { loading && <h4 className=\"animate__animated animate__rotateInDownLeft\">Cargando...</h4> }\n            <div className=\"card-grid\">\n                    {\n                        images.map( imagen => (\n                            <GifGridItem key={ imagen.id } {...imagen} />\n                        ))\n                    }\n            </div>\n        </>\n    );\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGif = ( categoria ) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs( categoria ).then( imgs => {\n            setTimeout(() => {\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            }, 1500);\n        });\n    }, [ categoria ]);\n\n    return state;\n}","import React,{ useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n// import PropTypes from 'prop-types';\n\nconst GifExpertApp = props => {\n    const [categorias, setCategorias] = useState(['Attack on titan']);\n\n    return (\n        <>\n            <h2 className=\"animate__animated animate__lightSpeedInLeft\">GifExpertApp</h2>\n            <AddCategory setCategorias={ setCategorias } />\n            <hr />\n            <ol>\n                {\n                    categorias.map( category => (\n                        <GifGrid key={ category } categoria={ category } />\n                    ))\n                }\n            </ol>\n        </>\n    );\n}\n\n// GifExpertApp.propTypes = {\n\n// }\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}